[build-system]
requires = [
  "babel",
  "setuptools>=45",
  "setuptools-scm[toml]>=8",
  "wheel",
]

[project]
name = "weldx-widgets"
description = "Python based widgets for the weldx core package"
readme = "README.md"
keywords = [
  "ipywidgets",
  "weldx",
  "widgets",
]
license = { file = "LICENSE" }
authors = [
  { name = "Çağtay Fabry", email = "cagtay.fabry@bam.de" },
  { name = "Martin K. Scherer", email = "martin.scherer@bam.de" },
]
# Dependencies
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Physics",
]

dynamic = [
  "version",
]
dependencies = [
  "bidict",
  "ipyfilechooser",
  "ipympl",
  "ipython>=8",
  "ipywidgets",
  "k3d>=2.12",
  "matplotlib<3.9",
  "numpy",
  "pint",
  "tqdm",
  "weldx>=0.6",
]
optional-dependencies.test = [
  "pytest-cov",
  "pytest-xdist",
]
urls.bug_tracker = "https://github.com/BAMweldx/weldx-widgets/issues"
urls.changelog = "https://github.com/BAMweldx/weldx-widgets/blob/master/CHANGELOG.md"
urls.documentation = "https://weldx.readthedocs.io"
urls.repository = "https://github.com/BAMweldx/weldx-widgets"

[tool.setuptools.packages.find]
where = [
  ".",
]

[tool.setuptools_scm]
# enable setuptools-scm versioning

[tool.pytest.ini_options]
addopts = "--tb=short --color=yes -rsw --doctest-modules --cov=weldx_widgets"
testpaths = "weldx_widgets/tests"
filterwarnings = [
  "ignore::DeprecationWarning:traittypes.*:",
  "ignore:Passing method to :FutureWarning:xarray.*:",
  "error::pint.UnitStrippedWarning",
]

[tool.coverage.run]
source = [
  "weldx_widgets",
]

[tool.coverage.report]
omit = [
  "weldx_widgets/tests/*",
]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
]
