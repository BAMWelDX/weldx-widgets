name: pytest
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'weldx-widgets/**'
      - '.github/workflows/pytest.yml'

jobs:
  pytest:
    name: pytest
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]
        py: ['3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}

      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v2
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: pip installs
        run: |
          pip install wheel
          pip install -e .[test]

      - name: setup matplotlib
        if: startsWith(runner.os, 'Windows') && ((github.event.pull_request.draft == false) || (github.ref == 'refs/heads/master'))
        run: |
            if not exist %userprofile%\.matplotlib\ ( mkdir %userprofile%\.matplotlib\ )
            echo backend: Agg > %userprofile%\.matplotlib\matplotlibrc
            python -c "import matplotlib as m; print(m.matplotlib_fname())"
            python -c "import matplotlib as m; print(m.rc_params()['backend'])"
        shell: cmd

      - name: run pytest
        run: |
          pytest --cov=weldx_widgets --no-cov-on-fail
          echo "Exited with '$?'"

      - name: coverage xml (combination is performed by pytest-cov)
        run: coverage xml

      - name: codecov.io
        uses: codecov/codecov-action@v1
